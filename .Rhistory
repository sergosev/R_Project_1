mean_cnt = mean(cnt, na.rm=T)) %>%
ungroup()
ggplot(data = grouped_means, aes(x = mnth, y = mean_cnt))+
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~ yr)
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})[!na]
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})[!NA]
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})[!=NA]
knitr::opts_chunk$set(echo = TRUE,
error = FALSE,
warning = FALSE)
#Задаем рабочую директорию
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
#Подгружаем библиотеки
library(tidyr)
library(dplyr)
library(ggplot2)
library(DescTools)
ggplot(data = work_data[work_data$season %in% c(1,3)], aes(x = season, y = cnt, fill = season))+
geom_bar(stat="identity")
ggplot(data = work_data[work_data$season == 1 | work_data$season == 3], aes(x = season, y = cnt, fill = season))+
geom_bar(stat="identity")
ggplot(data = work_data[work_data$season %in% c(1,3),], aes(x = season, y = cnt, fill = season))+
geom_bar(stat="identity")
ggplot(data = work_data[work_data$season %in% c(1,3),], aes(x = season, y = cnt, color = season))+
geom_bar(stat="identity")+
geom_errorbar(ymin)
ggplot(data = work_data[work_data$season %in% c(1,3),], aes(x = season, y = cnt, color = season))+
geom_bar(stat="identity")
ggplot(data = work_data[work_data$season %in% c(1,3),], aes(x = season, y = cnt, fill = season, color = season))+
geom_bar(stat="identity")
ggplot(data = work_data[work_data$season %in% c(1,3),], aes(x = season, y = cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season)
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=x, ymin=lower, ymax=upper), width=0.3, position = position_dodge(0.9))
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.3, position = position_dodge(0.9))
library(ggsignif)
wilcox.test(summer, winter, alternative = "greater")
# Создаем новый столбец с суммой casual + registered
work_data$total_users <- work_data$casual + work_data$registered
# Выбираем данные за лето и зиму
summer <- work_data$total_users[work_data$season == 3]
winter <- work_data$total_users[work_data$season == 1]
# Проверка нормальности
shapiro.test(summer)
shapiro.test(winter)
wilcox.test(summer, winter, alternative = "greater")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.3, position = position_dodge(0.9))+
geom_signif(y_position = 6000, xmin = 1, xmax = 3, annotation = "p-value < 2.2e-16")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.3, position = position_dodge(0.9))+
geom_signif(y_position = 6000, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.3, position = position_dodge(0.9))+
geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.3, position = position_dodge(0.9))+
geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
source("~/.active-rstudio-document", echo=TRUE)
install.packages('ggsignif')
library(ggsignif)
gc()
knitr::opts_chunk$set(echo = TRUE,
error = FALSE,
warning = FALSE)
#Задаем рабочую директорию
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
#Подгружаем библиотеки
library(tidyr)
library(dplyr)
library(ggplot2)
library(DescTools)
#Загружаем таблицу
data <- read.csv("day.csv", header = T)
str(data)
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})
data_wo_na <- na.omit(data)
sapply(data_wo_na[c(3:9)], FUN = function(x) {
unique(x)
})
fac_data_wo_na <- data_wo_na %>%
mutate(across(where(is.integer) & !c('instant', 'casual', 'registered', 'cnt'), as.factor))
str(fac_data_wo_na)
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
fac_data_wo_na_and_outs <- fac_data_wo_na %>% filter(!(atemp < 0.3 & temp > 0.5))
work_data <- fac_data_wo_na_and_outs
summary(work_data)
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>% # получили длинный формат
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) + #рисуем график
geom_tile() +
scale_fill_gradient(low='white', high='darkred')+
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\ncoefficient')
grouped_means <- work_data %>% select(c(mnth, yr, casual, registered, cnt)) %>%
group_by(across(c(yr, mnth))) %>%
summarise(mean_casual = mean(casual, na.rm=T),
mean_reg = mean(registered, na.rm=T),
mean_cnt = mean(cnt, na.rm=T)) %>%
ungroup()
ggplot(data = grouped_means, aes(x = mnth, y = mean_cnt))+
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~ yr)+
labs(x='Месяц', y='Среднее число арендованных велосипедов')
# Создаем новый столбец с суммой casual + registered
work_data$total_users <- work_data$casual + work_data$registered
# Выбираем данные за лето и зиму
summer <- work_data$total_users[work_data$season == 3]
winter <- work_data$total_users[work_data$season == 1]
# Проверка нормальности
shapiro.test(summer)
shapiro.test(winter)
wilcox.test(summer, winter, alternative = "greater")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
# Создаем столбец с долей зарегистрированных пользователей
work_data$registered_ratio <- work_data$registered / work_data$total_users
# Выбираем данные за лето и зиму
registered_ratio_summer <- work_data$registered_ratio[work_data$season == 3]
registered_ratio_winter <- work_data$registered_ratio[work_data$season == 1]
# Проводим тест Манна-Уитни с альтернативной гипотезой, что зимой доля больше
wilcox.test(registered_ratio_winter, registered_ratio_summer, alternative = "greater")
# рабочие (1) и нерабочие (0) дни
table(work_data$workingday)
# разделяем данные по рабочим и нерабочим дням
# cnt - общее количество арендованных велосипедов за день
cnt_working <- work_data$cnt[work_data$workingday == 1]
cnt_nonworking <- work_data$cnt[work_data$workingday == 0]
# для проверки нормального распределения данных проводим тест Шапиро-Уилка
shapiro.test(cnt_working)
shapiro.test(cnt_nonworking)
# визуализация
hist(cnt_working, main="Рабочие дни", xlab="cnt")
hist(cnt_nonworking, main="Нерабочие дни", xlab="cnt")
#применяем тест Манна-Уитни
wilcox.test(cnt_working, cnt_nonworking, alternative = "two.sided")
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge')+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
labs(x = "Working day", y = "Mean number of total users")
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkred', 'steelblue'))+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
labs(x = "Working day", y = "Mean number of total users")
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkgreen', 'steelblue'))+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
labs(x = "Working day", y = "Mean number of total users")
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkgreen', 'blue'))+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
labs(x = "Working day", y = "Mean number of total users")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkgreen', 'steelblue'))+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkgreen', 'steelblue'))+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
labs(x = "Working day", y = "Mean number of total users")
knitr::opts_chunk$set(echo = TRUE,
error = FALSE,
warning = FALSE)
#Задаем рабочую директорию
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
#Подгружаем библиотеки
library(tidyr)
library(dplyr)
library(ggplot2)
library(DescTools)
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkgreen', 'darkred'))+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge', fill=c('darkgrey', 'darkred'))+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge', fill=c('black', 'darkred'))+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
CI_bar_data <- work_data %>%
filter(season %in% c(1,3)) %>%
select(c(season, cnt)) %>%
group_by(season) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(season = c("winter", "summer"))
ggplot(data = CI_bar_data, aes(x = season, y = mean_cnt, fill = season))+
geom_bar(stat="identity", position = 'dodge', fill=c('#3C3C3C', 'darkred'))+
geom_errorbar(aes(x=season, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
ggsignif::geom_signif(y_position = 6300, xmin = 1, xmax = 2, annotation = "p-value < 2.2e-16")+
labs(x = "Season", y = "Mean number of total users")
CI_bar_data <- work_data %>%
select(c(workingday, cnt)) %>%
group_by(workingday) %>%
summarise('lower' = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["lwr.ci"],
"upper" = MeanCI(cnt, conf.level = 0.95, method = 'boot', na.rm = T)["upr.ci"],
'mean_cnt' = mean(cnt, na.rm=T))%>%
mutate(workingday = c("no", "yes"))
ggplot(data = CI_bar_data, aes(x = workingday, y = mean_cnt, fill = workingday))+
geom_bar(stat="identity", position = 'dodge', fill=c('#3C3C3C', 'darkred'))+
geom_errorbar(aes(x=workingday, ymin=lower, ymax=upper), width=0.2, position = position_dodge(0.9))+
labs(x = "Working day", y = "Mean number of total users")
knitr::opts_chunk$set(echo = TRUE,
error = FALSE,
warning = FALSE)
#Задаем рабочую директорию
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
#Подгружаем библиотеки
library(tidyr)
library(dplyr)
library(ggplot2)
library(DescTools)
#Загружаем таблицу
data <- read.csv("day.csv", header = T)
str(data)
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})
data_wo_na <- na.omit(data)
sapply(data_wo_na[c(3:9)], FUN = function(x) {
unique(x)
})
fac_data_wo_na <- data_wo_na %>%
mutate(across(where(is.integer) & !c('instant', 'casual', 'registered', 'cnt'), as.factor))
str(fac_data_wo_na)
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
fac_data_wo_na_and_outs <- fac_data_wo_na %>% filter(!(atemp < 0.3 & temp > 0.5))
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = value) %>%
ggplot(aes(y=value, x = "Количественные переменные"))+
geom_boxplot()+
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = value) %>%
ggplot(aes(y=value, x = "Количественные переменные"))+
geom_boxplot()
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = value)
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = 'value') %>%
ggplot(aes(y=value, x = "Количественные переменные"))+
geom_boxplot()
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = 'value')
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = 'value') %>%
mutate("Количественные переменные" = as.factor("Количественные переменные"))
ggplot(aes(y=value, x = "Количественные переменные"))+
geom_boxplot()
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = 'value') %>%
mutate("Количественные переменные" = as.factor("Количественные переменные")) %>%
ggplot(aes(y=value, x = "Количественные переменные"))+
geom_boxplot()
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные перменные", 'values_to' = 'value') %>%
mutate(Количественные переменные = as.factor(Количественные переменные)) %>%
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "Количественные_перменные", 'values_to' = 'value') %>%
mutate(Количественные_переменные = as.factor(Количественные_переменные)) %>%
ggplot(aes(y=value, x = "Количественные переменные"))+
geom_boxplot()
fac_data_wo_na_and_outs %>%
select(c('hum', 'temp', 'atemp', 'windspeed')) %>%
pivot_longer(cols = everything(), names_to = "variable", 'values_to' = 'value') %>%
mutate(variable = as.factor(variable)) %>%
ggplot(aes(y=value, x = variable))+
geom_boxplot()
